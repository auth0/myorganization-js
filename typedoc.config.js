/** @type {import('typedoc').TypeDocOptions} */
module.exports = {
    entryPoints: ["src/index.ts"],
    entryPointStrategy: "resolve",
    out: "docs",
    name: "Auth0 MyOrg SDK",
    theme: "default",
    includeVersion: true,
    excludePrivate: true,
    excludeProtected: false,
    excludeExternals: true,
    excludeInternal: true,
    plugin: ["typedoc-plugin-missing-exports"],
    internalModule: "SDK",
    readme: "README.md",
    categorizeByGroup: true,
    defaultCategory: "Other",
    categoryOrder: ["MyOrg API", "Resources", "Types", "Errors", "*"],
    sort: ["source-order", "kind", "alphabetical"],
    sortEntryPoints: true,
    useTsLinkResolution: true,
    preserveLinkText: true,
    kindSortOrder: [
        "Project",
        "Module",
        "Class",
        "Interface",
        "Namespace",
        "Enum",
        "EnumMember",
        "TypeAlias",
        "Function",
        "Variable",
        "Constructor",
        "Property",
        "Method",
        "Accessor",
        "Parameter",
        "Reference",
    ],
    navigation: {
        includeCategories: true,
        includeGroups: true,
        includeFolders: false,
    },
    groupOrder: ["MyOrg API", "Resources", "Types", "Errors", "*"],
    blockTags: [
        "@alpha",
        "@beta",
        "@defaultValue",
        "@decorator",
        "@deprecated",
        "@eventProperty",
        "@example",
        "@experimental",
        "@inheritDoc",
        "@internal",
        "@label",
        "@override",
        "@packageDocumentation",
        "@param",
        "@private",
        "@privateRemarks",
        "@public",
        "@readonly",
        "@remarks",
        "@returns",
        "@sealed",
        "@see",
        "@throws",
        "@typeParam",
        "@virtual",
        "@group",
        "@namespace",
        "@since",
        "@author",
        "@property",
        "@template",
        "@security",
        "@pattern",
    ],
    validation: {
        notExported: true,
        invalidLink: false,
        notDocumented: false,
    },
    treatWarningsAsErrors: false,
    cleanOutputDir: true,
    hideGenerator: true,
    navigationLinks: {
        GitHub: "https://github.com/auth0/myorganization-js",
        npm: "https://www.npmjs.com/package/auth0-my-org",
    },
    visibilityFilters: {
        protected: false,
        inherited: true,
        external: false,
    },
    modifierTags: [
        "@override",
        "@virtual",
        "@readonly",
        "@deprecated",
        "@sealed",
        "@internal",
        "@alpha",
        "@beta",
        "@experimental",
        "@public",
        "@private",
        "@security",
        "@pattern",
        "@property",
        "@template",
    ],
    searchInComments: true,
    disableSources: true,
    gitRevision: "main",
};
