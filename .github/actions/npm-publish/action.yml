name: Publish release to npm

inputs:
    node-version:
        required: true
    npm-token:
        required: true
    version:
        required: true
    require-build:
        default: true
    release-directory:
        default: "./"

runs:
    using: composite

    steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Setup Node
          uses: actions/setup-node@v4
          with:
              node-version: ${{ inputs.node-version }}
              registry-url: "https://registry.npmjs.org"

        - name: Install pnpm
          uses: pnpm/action-setup@41ff72655975bd51cab0327fa583b6e92b6d3061 # pin@v4.2.0

        - name: Install dependencies
          shell: bash
          run: pnpm install --frozen-lockfile

        - name: Build package
          if: inputs.require-build == 'true'
          shell: bash
          run: pnpm build

        - name: Validate package
          shell: bash
          run: pnpm lint:package

        - name: Publish release to NPM
          shell: bash
          working-directory: ${{ inputs.release-directory }}
          run: |
              if [[ "${VERSION}" == *"beta"* ]]; then
                TAG="beta"
              elif [[ "${VERSION}" == *"alpha"* ]]; then
                TAG="alpha"
              else
                TAG="latest"
              fi
              npm publish --provenance --tag $TAG
          env:
              NODE_AUTH_TOKEN: ${{ inputs.npm-token }}
              VERSION: ${{ inputs.version }}
